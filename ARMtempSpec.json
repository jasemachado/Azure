{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "virtualMachineSize": {
            "type": "String",
            "defaultValue": "Standard_B1s",
            "metadata": {
                "description": "Size of VMs in the VM Scale Set."
            }
        },
        "vmssName": {
            "defaultValue": "web-set",
            "type": "String",
            "metadata": {
                "description": "String used as a base for naming resources (9 characters or less). A hash is prepended to this string for some resources, and resource-specific information is appended."
            }
        },
        "instanceCount": {
            "defaultValue": 2,
            "minValue": 1,
            "maxValue": 50,
            "type": "Int",
            "metadata": {
                "description": "Number of VM instances (50 or less)."
            }
        },
        "adminUsername": {
            "defaultValue": "azureuser",
            "type": "String",
            "metadata": {
                "description": "Admin username on all VMs."
            }
        },
        "adminPublicKey": {
            "type": "SecureString"
        },
        "securityType": {
            "defaultValue": "Standard",
            "allowedValues": [
                "Standard",
                "TrustedLaunch"
            ],
            "type": "String",
            "metadata": {
                "description": "Security Type of the Virtual Machine."
            }
        }
    },
    "variables": {
        "location": "[resourceGroup().location]",
        "uniqueVMSSNamePubDNS": "[concat(parameters('vmssName'), uniqueString(resourceGroup().id))]",
        "addressPrefix": "10.0.0.0/16",
        "subnetPrefix": "10.0.0.0/24",
        "virtualNetworkName": "[format('{0}-vnet', parameters('vmssName'))]",
        "publicIPAddressName": "[format('{0}-pip', parameters('vmssName'))]",
        "subnetName": "[format('{0}-subnet', parameters('vmssName'))]",
        "loadBalancerName": "[format('{0}-lb', parameters('vmssName'))]",
        "natPoolName": "[format('{0}-natpool', parameters('vmssName'))]",
        "natpool2Name": "[format('{0}-natpool2', parameters('vmssName'))]",
        "bePoolName": "[format('{0}-bepool', parameters('vmssName'))]",
        "natStartPort": 50000,
        "natEndPort": 50120,
        "natBackendPort": 22,
        "nicName": "[format('{0}nic', parameters('vmssName'))]",
        "ipConfigName": "[format('{0}ipconfig', parameters('vmssName'))]",
        "frontEndIPConfigID": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('loadBalancerName'), 'loadBalancerFrontEnd')]",
        "osType": {
            "publisher": "kcloudhub",
            "offer": "apache",
            "sku": "apache",
            "version": "latest"
        },
        "imageReference": "[variables('osType')]",
        "securityProfileJson": {
            "uefiSettings": {
                "secureBootEnabled": true,
                "vTpmEnabled": true
            },
            "securityType": "[parameters('securityType')]"
        }
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2023-04-01",
            "name": "[variables('virtualNetworkName')]",
            "location": "[variables('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2023-04-01",
            "name": "[variables('publicIPAddressName')]",
            "location": "[variables('location')]",
            "properties": {
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                    "domainNameLabel": "[variables('uniqueVMSSNamePubDNS')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2023-04-01",
            "name": "[variables('loadBalancerName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancerFrontEnd",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('bePoolName')]"
                    }
                ],
                "inboundNatPools": [
                    {
                        "name": "[variables('natPoolName')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID')]"
                            },
                            "protocol": "Tcp",
                            "frontendPortRangeStart": "[variables('natStartPort')]",
                            "frontendPortRangeEnd": "[variables('natEndPort')]",
                            "backendPort": "[variables('natBackendPort')]"
                        }
                    },
                    {
                        "name": "[variables('natpool2Name')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID')]"
                            },
                            "protocol": "Tcp",
                            "frontendPortRangeStart": 9000,
                            "frontendPortRangeEnd": 9120,
                            "backendPort": 9000
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "[concat(variables('loadBalancerName'), '-lbrule01')]",
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/loadBalancingRules/webLB')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
                            },
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "Default",
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancerName'), variables('bePoolName'))]"
                            },
                            "backendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancerName'), variables('bePoolName'))]"
                                }
                            ],
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/probe')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "probe",
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/probe')]",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 80,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 1,
                            "probeThreshold": 1
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "apiVersion": "2023-03-01",
            "name": "[parameters('vmssName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ],
            "sku": {
                "name": "[parameters('virtualMachineSize')]",
                "tier": "Standard",
                "capacity": "[parameters('instanceCount')]"
            },
            "plan": {
                "name": "apache",
                "publisher": "kcloudhub",
                "product": "apache"
            },
            "properties": {
                "overprovision": false,
                "upgradePolicy": {
                    "mode": "Manual"
                },
                "virtualMachineProfile": {
                    "storageProfile": {
                        "osDisk": {
                            "createOption": "FromImage",
                            "caching": "ReadWrite"
                        },
                        "imageReference": "[variables('imageReference')]"
                    },
                    "osProfile": {
                        "computerNamePrefix": "[parameters('vmssName')]",
                        "adminUsername": "[parameters('adminUsername')]",
                        "linuxConfiguration": {
                            "disablePasswordAuthentication": true,
                            "ssh": {
                                "publicKeys": [
                                    {
                                        "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                        "keyData": "[parameters('adminPublicKey')]"
                                    }
                                ]
                            }
                        }
                    },
                    "securityProfile": "[if(equals(parameters('securityType'), 'TrustedLaunch'), variables('securityProfileJson'), null())]",
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "[variables('nicName')]",
                                "properties": {
                                    "primary": true,
                                    "ipConfigurations": [
                                        {
                                            "name": "[variables('ipConfigName')]",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[reference(resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName')), '2023-04-01').subnets[0].id]"
                                                },
                                                "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "[reference(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '2023-04-01').backendAddressPools[0].id]"
                                                    }
                                                ],
                                                "loadBalancerInboundNatPools": [
                                                    {
                                                        "id": "[reference(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '2023-04-01').inboundNatPools[0].id]"
                                                    },
                                                    {
                                                        "id": "[reference(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '2023-04-01').inboundNatPools[1].id]"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                }
            }
        },
        {
            "type": "Microsoft.Insights/autoscalesettings",
            "apiVersion": "2022-10-01",
            "name": "autoscaleHost",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('vmssName'))]"
            ],
            "properties": {
                "name": "autoscaleHost",
                "targetResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('vmssName'))]",
                "enabled": true,
                "profiles": [
                    {
                        "name": "Profile1",
                        "capacity": {
                            "minimum": "1",
                            "maximum": "10",
                            "default": "[parameters('instanceCount')]"
                        },
                        "rules": [
                            {
                                "metricTrigger": {
                                    "metricName": "Percentage CPU",
                                    "metricResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('vmssName'))]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT5M",
                                    "timeAggregation": "Average",
                                    "operator": "GreaterThan",
                                    "threshold": 60
                                },
                                "scaleAction": {
                                    "direction": "Increase",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT1M"
                                }
                            },
                            {
                                "metricTrigger": {
                                    "metricName": "Percentage CPU",
                                    "metricResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('vmssName'))]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT5M",
                                    "timeAggregation": "Average",
                                    "operator": "LessThan",
                                    "threshold": 30
                                },
                                "scaleAction": {
                                    "direction": "Decrease",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT1M"
                                }
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "Microsoft.LoadTestService/loadtests",
            "apiVersion": "2022-12-01",
            "name": "[concat(parameters('vmssName'), '-loadtest')]",
            "location": "[variables('location')]"
        }
    ]
}
